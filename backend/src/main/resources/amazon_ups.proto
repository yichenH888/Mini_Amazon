syntax = "proto2";

package mini_amazon;
option java_package = "org.mini_amazon.proto";
option java_outer_classname = "AmazonUPSProtocol";

// request
message AUCommand{
  repeated AUPickupRequest pickupRequests = 1;
  repeated AUDeliverRequest deliverRequests = 2;
  repeated int64 acks = 3;
  repeated Err error = 4;
}


// response
message UACommand{
  repeated UALoadRequest loadRequests = 1;
  repeated UADelivered delivered = 2;
  repeated int64 acks = 3;
  repeated Err error = 4;
}


message UAStart {
  required int64 worldid = 1;
  required int64 seqnum = 2;
}


// Amazon to UPS: when Amazon received a Buy command, it send APickupRequest to UPS to prepare a truck sent to target warehouse
message AUPickupRequest{
  required int64 seqNum = 1;
  required int64 shipId = 2;
  required int32 warehouseId = 3;
  required int32 x = 4; // location of the warehouse
  required int32 y = 5; // location of the warehouse
  required int32 destinationX = 6;
  required int32 destinationY = 7;
  optional string upsName = 8; // user name of the UPS
  repeated string items = 9;
}


// U -> A Arrived, ready to load
message UALoadRequest{
  required int64 seqNum = 1;
  required int32 truckId = 2;
  required int64 shipId = 3;
}


// A -> U: when all ready, make UPS deliver the package
message AUDeliverRequest{
  required int64 seqNum = 1;
  required int64 shipId = 2;
}


// U -> A: delivered
message UADelivered{
  required int64 seqNum = 1;
  required int64 shipId = 2;
}


message Err{
  required string err = 1;
  required int64 originSeqNum = 2;
  required int64 seqNum = 3;
}

